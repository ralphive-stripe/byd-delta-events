AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  byd-stripe
  Template for byd-stripe
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10
    Environment:
      Variables:
        #CHANGE to real system details
        #ByD Details
        BYD_ODATA: "https://myXXXXX.sapbydesign.com/sap/byd/odata/cust/v1"
        BYD_AUTH: "user:pass base64 encoded"
        BYD_INVOICES: "/khcustomerinvoice/CustomerInvoiceCollection"
        BYD_INVOICES_ID: "ID"
        BYD_CUSTOMERS: "/khcustomer/CustomerCollection"
        BYD_CUSTOMERS_ID: "InternalID"
        BYD_SALESORDERS: "/khsalesorder/SalesOrderCollection"
        BYD_SALESORDERS_ID: "ID"
        BYD_SERVICESORDERS: "/tmserviceorder/ServiceOrderCollection"
        BYD_SERVICEORDERS_ID: "ID"
        BYD_DELIVERYREQUEST: "/khoutbounddeliveryrequest"
        BYD_OUTBOUNDDELIVERY: "/khoutbounddelivery"
        BYD_CUSTINVREQUEST: "/khcustomerinvoicerequest"
        STRIPE_SECRET: "sk_test_<your test key>"
        STRIPE_CUSTOMER: "cus_<a sample customer>"
        STRIPE_ENDPOINT_SECRET: "<endpoint secret for webhook>"
    

Resources:
  #Function Gets ByD Delta
  GetBydObjectsFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: get-byd-objects/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Policies:
        # Give Create/Read/Update/Delete Permissions to the UserSessionTable
        - DynamoDBCrudPolicy:
            TableName: !Ref EventConfigTable
        - SNSPublishMessagePolicy:
            TopicName: "*"
      Environment:
        Variables:
          #AWS Details
          CONFIG_TABLE: !Ref EventConfigTable
          CONFIG_ID: 0
          SNS_TOPIC: !Ref BydEventTopic

  SetBydObjectsFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: set-byd-objects/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: "*"
      Environment:
        Variables:
          #AWS Details
          SNS_TOPIC: !Ref BydEventTopic          
 
 
  #Function Tweet an Event
  StripeMagic:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: stripe-magic/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: "*"
      Environment:
        Variables:
          SNS_TOPIC: !Ref NewStripeInvoiceTopic

 # This is a Lambda function config associated with the source code: put-item.js
  Webhook:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: stripe-webhook/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Description: Handler for Stripe Web Hooks
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: "*"
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          SNS_TOPIC: !Ref StripeEventTopic
      Events:
        Api:
          Type: Api
          Properties:
            Path: /webhook
            Method: POST

  #SNS Topic to handle Lambda Calls
  BydEventTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: 'byd-event-topic'
      TopicName:  'byd-event'
      Subscription:
        - Protocol: lambda
          Endpoint: !GetAtt StripeMagic.Arn
  
  StripeMagicInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref StripeMagic
      Principal: sns.amazonaws.com   

  #SNS Topic to handle stripe webhooks
  StripeEventTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: 'stripe-event-topic'
      TopicName:  'stripe-event'
      Subscription:
        - Protocol: lambda
          Endpoint: !GetAtt SetBydObjectsFunction.Arn
  
  SetBydObjectsFunctionInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref SetBydObjectsFunction
      Principal: sns.amazonaws.com   

  #SNS Topic to handle Lambda Calls
  NewStripeInvoiceTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: 'Invoice Due'
      TopicName:  'stripe-invoice'

  # DynamoDB table to store item: {id: &lt;ID&gt;, name: &lt;NAME&gt;}
  EventConfigTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: EventConfigTable
      PrimaryKey:
        Name: configId
        Type: Number
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  #Cloud Watch Event to Trigger function on timer
  ScheduledRule: 
    Type: AWS::Events::Rule
    Properties: 
      Description: "Invoke Byd Delta function"
      Name: "trigger-byd-delta"
      State: "ENABLED"
      ScheduleExpression: "rate(1 minute)"
      Targets: 
        - 
          Arn: 
            Fn::GetAtt: 
              - "GetBydObjectsFunction"
              - "Arn"
          Id: "TargetFunctionV1"
  
  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Ref GetBydObjectsFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt "ScheduledRule.Arn"
Outputs:
  GetBydObjectsFunction:
    Description: "Get ByD Objects Function ARN"
    Value: !GetAtt GetBydObjectsFunction.Arn
  GetBydObjectsFunctionIamRole:
    Description: "Get ByD Objects Function"
    Value: !GetAtt GetBydObjectsFunctionRole.Arn
  WebEndpoint:
    Description: "API Gateway endpoint URL for Dev stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

